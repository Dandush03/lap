version: "3"
services:
  webserver:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    ports:
      - 80:80
    tty: true
  database:
    image: postgres:latest
    volumes:
      - lap_postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: password
    healthcheck:
      test: pg_isready -U postgres
    ports:
      - '5432:5432'
    networks:
      default:
        aliases:
          - postgres
  api:
    deploy:
      restart_policy:
        condition: any
        delay: 5s
        window: 120s
    build:
      context: ./api
      dockerfile: ./Dockerfile
      args:
        RAILS_ENV: ${RAILS_ENV}
        RAILS_MASTER_KEY: ${RAILS_MASTER_KEY}
    volumes:
      - ./api:/api
    ports:
      - "3000:3000"
    depends_on:
      - database
      - webserver
    tty: true
    stdin_open: true
  corporate:
    deploy:
      restart_policy:
        condition: any
        delay: 5s
        window: 120s
    build:
      context: ./corporate
      dockerfile: ./Dockerfile
      args:
        RAILS_ENV: ${RAILS_ENV}
    volumes:
      - ./corporate:/usr/src/app
    ports:
      - "3001:3001"
    depends_on:
      - api
  client:
    deploy:
      restart_policy:
        condition: any
        delay: 5s
        window: 120s
    build:
      context: ./client
      dockerfile: ./Dockerfile
      args:
        RAILS_ENV: ${RAILS_ENV}
    volumes:
      - ./client:/usr/src/app
    ports:
      - "3002:3002"
    depends_on:
      - api
      - corporate
